컴퓨터 구조

본체 / 마더보드

입력(키보드/마우스) -> 기억 장치/중앙처리장치(CPU, SSD/HDD, RAM) -> 출력(모니터)

기억 장치 (Memory:메모리)
- 보조 기억 장치 : SSD, HDD <- OS, 프로그램, DATA 가 저장됨
  Lodding(로딩) : SSD 에서 저장된 프로그램을 실행하게 되면 SSD/HDD DATA 가 RAM으로 이동

- 주 기억 장치

- 중앙처리장치:CPU     CPU 내부 구조(아래 확인)
 1. 제어장치                     읽고
 2. 해석기 = Decoder(디코더)      해석하고
 3. 연산장치                     이동하고
 4. 메모리(레지스터) 	       저장

________________________
프로그램 실행 메모리 이동 과정

보조 기억 장치(Program) -(Lodding)> 주 기억 장치(Process) -(가져오기)> CPU:제어장치(해석) -> 연산장치(동작)

_______________________________________________
OS(운영체제)가 RAM, CPU, SSD/HDD 등 장치들을 제어한다.



|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


프로그램과 프로세스

프로세스는 각자 본인이 사용하는 메모리 영역과 레지스터 값을 가진다.

프로세스의 메모리 영역은 코드, 데이터, 힙, 스택 영역으로 구성된다.
 - 코드(text) : 사용자가 작성한 프로그램 함수들의 코드가 기계어 명령 형태로 변경되어 저장되는 공간
 - 데이터 : 전역 변수 또는 static 변수 등 프로그램이 사용하는 데이터를 저장하는 공간
 - 스택 : 함수의 복귀 조소와 지역변수, 매개변수, 반환값을 저장하고 공간, 재귀함수가 반복되거나 지역변수가 너무 많으면 stack overflow 발생. 가변적인다.
 - 힙 : 프로세스 실행 중에 런타임에 할당되는 영역. 이곳에 메모리를 할당하는 것을 동적할당이라고 한다. 가변적이다.

|_______stack_______| 	  <- 전역변수 저장	   ^
|_______heap_______|  	  <- 동적 메모리	   ^
|_______data_______|      <- 전역변수 저장    ^
|_______text/code_______| <- 기계어/어셈플리어 ^







